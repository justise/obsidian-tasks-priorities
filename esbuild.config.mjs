import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import copy from "esbuild-plugin-copy";
import fs from "fs";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

// Custom plugin to delete styles.css before build
const cleanStylesPlugin = {
	name: "clean-styles",
	setup(build) {
		build.onStart(() => {
			const path = "./styles.css";
			if (fs.existsSync(path)) {
				fs.unlinkSync(path);
				console.log("Deleted old styles.css");
			}
		});
	},
};

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["claude/main.ts", "claude/styles.css"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins,
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outdir: ".",
	minify: prod,
	plugins: [
		cleanStylesPlugin, // <--- Add this before copy()
		copy({
			watch: true,
			assets: [
				{
					from: "claude/styles.css",
					to: "./styles.css", // Copy to the root directory
				},
			],
		}),
	],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
